import { Component, OnInit, OnDestroy } from '@angular/core';
import { CommonModule } from '@angular/common';
import { 
  IonContent, 
  IonButton, 
  IonIcon, 
  IonSpinner 
} from '@ionic/angular/standalone';
import { ActivatedRoute, Router } from '@angular/router';
import { AuthService } from '../auth.service';
import { Subscription } from 'rxjs';

@Component({
  selector: 'app-auth-callback',
  templateUrl: './auth-callback.component.html',
  styleUrls: ['./auth-callback.component.scss'],
  standalone: true,
  imports: [CommonModule, IonContent, IonButton, IonIcon, IonSpinner]
})
export class AuthCallbackComponent implements OnInit, OnDestroy {
  isLoading = true;
  errorMessage = '';
  isIOSPlatform = false;
  private subscription = new Subscription();

  constructor(
    private route: ActivatedRoute,
    private router: Router,
    private authService: AuthService
  ) {}

  ngOnInit() {
    this.processCallback();
  }

  ngOnDestroy() {
    this.subscription.unsubscribe();
  }

  private processCallback() {
    // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ URL (query params)
    this.route.queryParams.subscribe(params => {
      const accessToken = params['access_token'];
      const error = params['error'];
      const errorDescription = params['error_description'];
      const platform = params['platform'];

      // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ query params, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ö—ç—à
      if (!accessToken && !error) {
        this.processHashParams();
        return;
      }

      // –ï—Å–ª–∏ —ç—Ç–æ iOS –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
      if (platform === 'ios') {
        this.showIOSInstructions();
        return;
      }

      this.processAuthResult(accessToken, error, errorDescription);
    });
  }

  private processHashParams() {
    // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ —Ö—ç—à–∞ URL (–¥–ª—è OAuth Implicit Flow)
    const hash = window.location.hash.substring(1); // –£–±–∏—Ä–∞–µ–º —Å–∏–º–≤–æ–ª #
    const hashParams = new URLSearchParams(hash);
    
    const accessToken = hashParams.get('access_token');
    const error = hashParams.get('error');
    const errorDescription = hashParams.get('error_description');

    this.processAuthResult(accessToken, error, errorDescription);
  }

  private processAuthResult(accessToken: string | null, error: string | null, errorDescription: string | null) {
    if (accessToken) {
      // –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–∫–µ–Ω
      console.log('–ü–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω:', accessToken);
      this.subscription.add(
        this.authService.processYandexToken(accessToken).subscribe({
          next: () => {
            this.isLoading = false;
            // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            setTimeout(() => {
              this.router.navigate(['/tabs/all']);
            }, 1000);
          },
          error: (error) => {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–æ–∫–µ–Ω–∞:', error);
            this.errorMessage = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏';
            this.isLoading = false;
          }
        })
      );
    } else if (error) {
      // –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      this.errorMessage = errorDescription || `–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${error}`;
      this.isLoading = false;
      
      // –ß–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
      setTimeout(() => {
        this.router.navigate(['/auth']);
      }, 3000);
    } else {
      // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞
      this.errorMessage = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏';
      this.isLoading = false;
      
      setTimeout(() => {
        this.router.navigate(['/auth']);
      }, 3000);
    }
  }

  goToAuth() {
    this.router.navigate(['/auth']);
  }

  private showIOSInstructions() {
    this.isLoading = false;
    this.errorMessage = '';
    this.isIOSPlatform = true;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è iOS –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    // –û–Ω–∏ –¥–æ–ª–∂–Ω—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–∫–µ–Ω –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    console.log('üîç iOS platform detected, showing instructions');
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ —Ö—ç—à–∞
    this.processHashParams();
  }
}
